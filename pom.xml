<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="
            http://maven.apache.org/POM/4.0.0
            http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.github.rmannibucau</groupId>
  <artifactId>factorEE</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>JavaEE Factory</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <tomee.version>7.0.0-M3</tomee.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.apache.tomee</groupId>
      <artifactId>javaee-api</artifactId>
      <version>7.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.16.6</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.github.rmannibucau</groupId>
      <artifactId>ohmyjs</artifactId>
      <version>0.0.2</version>
    </dependency>
    <dependency>
      <groupId>com.samskivert</groupId>
      <artifactId>jmustache</artifactId>
      <version>1.12</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.tomee</groupId>
      <artifactId>tomee-embedded</artifactId>
      <version>${tomee.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.tomee</groupId>
      <artifactId>ziplock</artifactId>
      <version>${tomee.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.3</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.19</version>
        <configuration>
          <argLine>
            "-javaagent:${settings.localRepository}/org/apache/tomee/openejb-javaagent/${tomee.version}/openejb-javaagent-${tomee.version}.jar"
          </argLine>
          <trimStackTrace>false</trimStackTrace>
        </configuration>
      </plugin>
      <plugin> <!-- mvn tomee-embedded:run to start testing against a real MySQL -->
        <groupId>org.apache.tomee.maven</groupId>
        <artifactId>tomee-embedded-maven-plugin</artifactId>
        <version>${tomee.version}</version>
        <configuration>
          <context>/${project.artifactId}</context>
          <classpathAsWar>true</classpathAsWar>
          <webResourceCached>false</webResourceCached>
          <containerProperties>
            <!-- we don't need a 100% EE server yet so switch off few things slowing down the boot or polluting logs -->
            <openejb.environment.default>false</openejb.environment.default>
            <tomee.skip-tld>false</tomee.skip-tld>

            <!-- let frontend resource be transpiled/compiled on the fly -->
            <javaeefactory.environment>dev</javaeefactory.environment>
          </containerProperties>
        </configuration>
      </plugin>
      <plugin> <!-- just to be able to test in not embedded mode before deployments -->
        <groupId>org.apache.tomee.maven</groupId>
        <artifactId>tomee-maven-plugin</artifactId>
        <version>${tomee.version}</version>
        <configuration>
          <context>/${project.artifactId}</context>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <id>prepare-war</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>exploded</goal>
            </goals>
          </execution>
          <execution>
            <id>default-war</id>
            <phase>package</phase>
            <goals>
              <goal>war</goal>
            </goals>
            <configuration> <!-- we dont want to overwrite already modified files -->
              <warSourceExcludes>**/*</warSourceExcludes>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>
      <plugin> <!-- cleanup files which will not be delivered -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>remove-optimized-js</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>clean</goal>
            </goals>
            <configuration>
              <filesets>
                <fileset>
                  <directory>${project.build.directory}/${project.build.finalName}/css/</directory>
                  <includes>
                    <include>javaee-factory.css</include>
                  </includes>
                </fileset>
                <fileset>
                  <directory>${project.build.directory}/${project.build.finalName}/js/app</directory>
                </fileset>
                <fileset>
                  <directory>${project.build.directory}/${project.build.finalName}/js/lib</directory>
                  <excludes>
                    <exclude>**/require.min.js</exclude>
                    <exclude>ckeditor/**</exclude>
                  </excludes>
                </fileset>
              </filesets>
              <excludeDefaultDirectories>true</excludeDefaultDirectories>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin> <!-- optimize custom css, js is done with r.js -->
        <groupId>com.samaxes.maven</groupId>
        <artifactId>minify-maven-plugin</artifactId>
        <version>1.7.4</version>
        <executions>
          <execution>
            <id>default-minify</id>
            <phase>prepare-package</phase>
            <configuration>
              <charset>UTF-8</charset>
              <cssSourceDir>css</cssSourceDir>
              <cssSourceFiles>
                <cssSourceFile>javaee-factory.css</cssSourceFile>
              </cssSourceFiles>
              <cssFinalFile>javaee-factory.min.css</cssFinalFile>
            </configuration>
            <goals>
              <goal>minify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin> <!-- render jade and es6 files, Note: yes we could "hack" it and reuse the cache of tests, better to just regenerate it properly -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.4.0</version>
        <executions>
          <execution>
            <id>render-jade-templates</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <mainClass>com.github.rmannibucau.ohmyjs.runner.JadeRunner</mainClass>
              <arguments>
                <argument>--source</argument>
                <argument>${project.basedir}/src/main/webapp/js/app/template</argument>
                <argument>--target</argument>
                <argument>${project.build.directory}/frontend/js/app/template</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>transpile-es6</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <mainClass>com.github.rmannibucau.ohmyjs.runner.BabelJsRunner</mainClass>
              <arguments>
                <argument>--source</argument>
                <argument>${project.basedir}/src/main/webapp/js/app</argument>
                <argument>--target</argument>
                <argument>${project.build.directory}/frontend/js/app</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin> <!-- optimize requirejs app -->
        <groupId>com.github.bringking</groupId>
        <artifactId>requirejs-maven-plugin</artifactId>
        <version>2.0.4</version>
        <executions>
          <execution>
            <id>r.js</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>optimize</goal>
            </goals>
            <configuration>
              <runner>nashorn</runner>
              <configFile>${project.basedir}/buildconfig.js</configFile>
              <filterConfig>true</filterConfig>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
